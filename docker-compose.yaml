version: "2"
services:

  # ----------------------------------------------------------------------------
  # PostgreSQL
  # ----------------------------------------------------------------------------
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: stratus
    ports:
      - 5432:5432
    volumes:
      - "./static/schema/001-schema-external-rpc.sql:/docker-entrypoint-initdb.d/001-schema.sql"

  postgres-persistent:
    extends:
      service: postgres
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
    profiles:
      - manual

  # ----------------------------------------------------------------------------
  # Prometheus
  # ----------------------------------------------------------------------------
  prometheus:
    image: prom/prometheus
    volumes:
      - ./static/prometheus.yaml:/etc/prometheus/prometheus.yaml
    ports:
      - 9090:9090
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
      - "--log.level=debug"

  # ----------------------------------------------------------------------------
  # OpenTelemetry
  # ----------------------------------------------------------------------------
  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports:
      - 4317:4317
      - 16686:16686

  # ----------------------------------------------------------------------------
  # Kafka
  # ----------------------------------------------------------------------------
  kafka:
    image: confluentinc/cp-kafka:7.4.1
    hostname: kafka
    container_name: kafka
    ports:
    - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
  # ----------------------------------------------------------------------------
  # Grafana Stack
  # ----------------------------------------------------------------------------
  grafana:
    image: grafana/grafana:latest
    ports:
      - 3005:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./static/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
      - loki
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    networks:
      - grafana-stack

  loki:
    image: grafana/loki:latest
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki
    networks:
      - grafana-stack

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./static/promtail/config.yaml:/etc/promtail/config.yaml
      - .:/var/log/host  # Mount host logs to a specific directory
    command: -config.file=/etc/promtail/config.yaml -log.level=debug
    depends_on:
      - loki
    networks:
      - grafana-stack

volumes:
  postgres-data:
  loki-data:
  grafana-data:
  alloy-data:

networks:
  grafana-stack:
    driver: bridge
