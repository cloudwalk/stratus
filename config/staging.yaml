kubernetes:
  base:
    sourceRepo:
      name: stratus
      org: cloudwalk
    monoRepo:
      url: git@github.com:cloudwalk/monorepo-gitops.git
      appsFolder: apps-config
      argoCDValues: helms/argocd/values.yaml
      repository: monorepo-gitops
    containerRegistry:
      url: gcr.io/infinitepay-staging
    deployConfig:
      cluster: infinitepay-staging
      environment: staging
      steps:
      - build
      - push
      - versioning
      - deploy
      service:
        asmRevision: asm-managed-stable
      version: 165baf1646bc39718ec8c5b9c7cfa7fcb9b1db56
  apps:
  - name: stratus-api
    dockerfile: ./docker/Dockerfile.run_with_importer
    secretsManager:
      enabled: true
      provider: gcpsm
    imageRepoName: stratus-rocks
    kind: statefulset
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    replicas: 3
    resources:
      requests:
        cpu: 4000m
        memory: 8Gi
    envs:
    - name: ENV
      value: staging
    service:
      name: stratus-api-cluster
      headless: enabled
      metrics:
        path: /
        port: '9000'
      ports:
      - containerPort: 3000
        name: app-stratus
        virtualservice:
          gateway: internal
          hosts:
          - stratus-api.services.staging.cloudwalk.network
      - containerPort: 9000
        name: metrics
    livenessProbe:
      httpGet:
        path: /liveness
        port: 3000
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 5
    readinessProbe:
      httpGet:
        path: /readiness
        port: 3000
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 5
    startupProbe:
      httpGet:
        path: /startup
        port: 3000
      initialDelaySeconds: 10
      periodSeconds: 5
      failureThreshold: 60
      timeoutSeconds: 5
    volumeClaims:
    - name: rocksdata
      storageClass: premium-rwo
      size: 1500Gi
    volumeMounts:
    - volumeName: rocksdata
      mountPath: /app/data
      storageClass: premium-rwo
  - name: stratus-api-benchmark
    dockerfile: ./docker/Dockerfile.run_with_importer
    secretsManager:
      enabled: true
      provider: gcpsm
    imageRepoName: stratus-rocks
    kind: statefulset
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    replicas: 1
    resources:
      requests:
        cpu: 4000m
        memory: 8Gi
    envs:
    - name: ENV
      value: staging
    service:
      name: stratus-api-benchmark-cluster
      headless: enabled
      metrics:
        path: /
        port: '9000'
      ports:
      - containerPort: 3000
        name: app-stratus
        virtualservice:
          gateway: internal
          hosts:
          - stratus-api-benchmark.services.staging.cloudwalk.network
      - containerPort: 9000
        name: metrics
    livenessProbe:
      httpGet:
        path: /liveness
        port: 3000
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 5
    readinessProbe:
      httpGet:
        path: /readiness
        port: 3000
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 5
    startupProbe:
      httpGet:
        path: /startup
        port: 3000
      initialDelaySeconds: 10
      periodSeconds: 5
      failureThreshold: 60
      timeoutSeconds: 5
    volumeClaims:
    - name: rocksdata
      storageClass: premium-rwo
      size: 1500Gi
    volumeMounts:
    - volumeName: rocksdata
      mountPath: /app/data
      storageClass: premium-rwo
