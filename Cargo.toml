[package]
name = "stratus"
version = "0.20.1"
edition = "2024"
default-run = "stratus"

# ------------------------------------------------------------------------------
# Runtime dependencies
# ------------------------------------------------------------------------------

[dependencies]

# general
anyhow = "=1.0.100"
cfg-if = "=1.0.3"
chrono = { version = "=0.4.42", features = ["serde"] }
const_format = "=0.2.34"
const-hex = "=1.15.0"
derive_more = "=2.0.1"
derive-new = "=0.7.0"
hash_hasher = "=2.0.4"
hex_fmt = "=0.3.0"
hex-literal = "=1.0.0"
humantime = "=2.2.0"
indexmap = { version = "=2.11.1", features = ["serde"] }
itertools = "=0.14.0"
nanoid = "=0.4.0"
oneshot = "=0.1.11"
parking_lot = "=0.12.4"
paste = "=1.0.15"
phf = "=0.13.1"
pin-project = "=1.1.10"
rand = { version = "=0.9.2", features = ["small_rng"] }
ring = "=0.17.14"
rustc-hash = "=2.1.1"
smallvec = "=1.15.1"
static_assertions = "=1.1.0"
strum = { version = "=0.27.2", features = ["derive"] }
quick_cache = "=0.6.16"
sugars = "=3.0.1"
thiserror = "=2.0.16"
uuid = { version = "=1.18.1", features = ["v7"]}
stratus_macros = { path = "./crates/stratus_macros" }
libc = "=0.2.175"

# async
tokio = { version = "=1.47.1", features = [
    "rt-multi-thread",
    "macros",
    "signal"
] }
tokio-util = "=0.7.16"

# config
clap = { version = "=4.5.47", features = ["derive", "env"] }
dotenvy = "=0.15.7"

# serialization
bincode = { version = "=2.0.1", features = ["derive"] }
display_json = "=0.2.1"
serde = "=1.0.219"
serde_json = "=1.0.143"
serde_urlencoded = "=0.7.1"
serde_with = "=3.14.1"

# parallelism
crossbeam-channel = "=0.5.15"
futures = "=0.3.31"
futures-timer = "=3.0.3"
futures-util = "=0.3.31"
futures-channel = "=0.3.31"

# ethereum / rpc
ethabi = "=18.0.0"
rlp = "=0.6.1"
alloy-trie = "=0.9.1"
revm-inspectors = { version = "=0.27.1", features = ["js-tracer"] }
alloy-rpc-types-trace = "=1.0.24"
alloy-rpc-types-eth = "=1.0.24"
alloy-consensus = { version = "=1.0.24", features = ["k256"] }
alloy-primitives = { version = "=1.3.1", features = ["rand"] }
alloy-eips = "=1.0.30"

# network
jsonrpsee = { version = "=0.26.0", features = ["server", "client"] }
reqwest = { version = "=0.12.23", features = ["json"] }
tower = "=0.5.2"
tower-http = { version = "=0.6.6", features = ["cors"] }
http = "=1.3.1"
http-body = "=1.0.1"
http-body-util = "=0.1.3"
bytes = "=1.10.1"

# observability
log = "=0.4.27"
metrics = "=0.24.2"
metrics-exporter-prometheus = { version = "=0.17.2", optional = true }
opentelemetry = "=0.30.0"
opentelemetry_sdk = { version = "=0.30.0", features = ["rt-tokio"] }
opentelemetry-otlp = { version = "=0.30.0", features = [
    "http-proto",
    "reqwest-client",
    "reqwest-rustls",
    "tls",
    "tls-roots",
    "grpc-tonic",
] }
sentry = "=0.42.0"
sentry-tracing = "=0.42.0"
tracing = { version = "=0.1.41", features = ["attributes"] }
tracing-opentelemetry = "=0.31.0"
tracing-subscriber = { version = "=0.3.20", features = ["env-filter", "json"] }
tracing-serde = "=0.2.0"

# storage
rocksdb = { version = "=0.24.0", features = ["multi-threaded-cf", "jemalloc"] }
sqlx = { version = "=0.8.6", features = [
    "runtime-tokio",
    "postgres",
    "bigdecimal",
    "time",
] }

# test
fake = { version = "=4.4.0", features = ["chrono", "derive"] }
rdkafka = {version = "=0.38.0", features = ["ssl", "sasl"] }
sasl2-sys = { version = "=0.1.22", features = ["vendored"] }

# Historic events processor
indicatif = "=0.18.0"
dashmap = "6.1.0"

# ------------------------------------------------------------------------------
# Platform specific dependencies
# ------------------------------------------------------------------------------

[target.'cfg(not(all(target_arch = "aarch64", target_os = "linux")))'.dependencies]
revm = { version = "=27.1.0", features = ["asm-keccak", "serde", "optional_eip3607"] }

[target.'cfg(all(target_arch = "aarch64", target_os = "linux"))'.dependencies]
revm = { version = "=27.1.0", features = ["serde", "optional_eip3607"]}

[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = { version = "=0.6", optional = true }

# ------------------------------------------------------------------------------
# Dev dependencies
# ------------------------------------------------------------------------------

[dev-dependencies]
serde_plain = "=1.0.2"
tempfile = "=3.23.0"
glob = "=0.3.3"

# ------------------------------------------------------------------------------
# Build dependencies
# ------------------------------------------------------------------------------

[build-dependencies]
anyhow = "=1.0.100"
const-hex = "=1.15.0"
glob = "=0.3.3"
hostname = "=0.4.1"
nom = "=8.0.0"
phf_codegen = "=0.13.1"
vergen-gitcl = { version = "=1.0.8", features = ["build", "cargo", "rustc", "si"] }

# ------------------------------------------------------------------------------
# Binaries
# ------------------------------------------------------------------------------

[[bin]]
name = "rpc-downloader"
path = "src/bin/rpc_downloader.rs"

[[bin]]
name = "importer-offline"
path = "src/bin/importer_offline.rs"

[[bin]]
name = "historic_events_processor"
path = "src/bin/historic_events_processor.rs"

[[bin]]
name = "data_migration"
path = "src/bin/data_migration.rs"

# ------------------------------------------------------------------------------
# Features
# ------------------------------------------------------------------------------

[features]
default = ["metrics", "tracing"]

# Application is running in develoment mode.
dev = []

# Enable runtime metrics collection.
metrics = ["dep:metrics-exporter-prometheus"]

# Enable runtime rocksdb metrics collection.
rocks_metrics = ["metrics"]

# Enable runtime tracing/spans collection.
tracing = []

# Changes to help us generate our flamegraphs
flamegraph = []

# Use Jemalloc as the global allocator
jemalloc = ["dep:tikv-jemallocator"]

# Use Jemalloc as the global allocator with profiling enabled
jeprof = ["tikv-jemallocator/profiling"]

# ------------------------------------------------------------------------------
# Lints
# ------------------------------------------------------------------------------

[lints.clippy]
clone_on_ref_ptr = "warn"
cloned_instead_of_copied = "warn"
default_trait_access = "warn"
disallowed_names = "warn"
manual_let_else = "warn"
semicolon_if_nothing_returned = "warn"
unused_async = "warn"
unused_self = "warn"
used_underscore_binding = "warn"
wildcard_imports = "warn"
unwrap_used = "allow"
expect_used = "warn"
panic = "warn"


[profile.release]
lto = "fat"
