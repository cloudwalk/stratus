[package]
name = "stratus"
version = "0.1.0"
edition = "2021"
default-run = "stratus"

# ------------------------------------------------------------------------------
# Runtime dependencies
# ------------------------------------------------------------------------------

[dependencies]

# general
anyhow = "=1.0.86"
async-trait = "=0.1.80"
byte-unit = "=5.1.4"
chrono = "=0.4.38"
const_format = "=0.2.32"
const-hex = "=1.12.0"
csv = "=1.3.0"
derive_more = "=0.99.17"
derive-new = "=0.6.0"
hex-literal = "=0.4.1"
humantime = "=2.1.0"
indexmap = { version = "=2.2.6", features = ["serde"] }
itertools = "=0.13.0"
nonempty = { version = "=0.10.0", features = ["serialize"] }
once_cell = "=1.19.0"
paste = "=1.0.15"
phf = "=0.11.2"
pin-project = "=1.1.5"
quote = "=1.0.36"
rand = "=0.8.5"
strum = "=0.26.2"
thiserror = "=1.0.61"
url = "=2.5.1"
uuid = { version = "=1.8.0", features = ["v4", "fast-rng" ] }

# async
tokio = { version = "=1.38.0", features = ["rt-multi-thread", "macros", "signal"] }
tokio-util = "=0.7.11"

# config
clap = { version = "=4.5.7", features = ["derive", "env"] }
dotenvy = "=0.15.7"

# serialization
bincode = { version = "=1.3.3", optional = true }
display_json = "=0.2.1"
prost = "=0.12.6"
prost-types = "=0.12.6"
serde = "=1.0.203"
serde_json = "=1.0.117"
serde_urlencoded = "=0.7.1"
serde_with = "=3.8.1"

# parallelism
crossbeam-channel = "=0.5.13"
futures = "=0.3.30"
futures-timer = "=3.0.3"
futures-util = "=0.3.30"

# ethereum / rpc
ethabi = "=18.0.0"
ethereum-types = "=0.14.1"
ethers-core = "=2.0.14"
evm-disassembler = "=0.5.0"
keccak-hasher = "=0.15.3" # this version must be compatible with triehash
rlp = "=0.5.2"
triehash = "=0.8.4"

# network
jsonrpsee = { version = "=0.23.1", features = ["server", "client"] }
k8s-openapi = { version = "=0.21.1", optional = true, features = ["v1_27"] }
kube = { version = "=0.90.0", optional = true, features = ["runtime", "derive"] }
raft = { version = "=0.7.0", optional = true }
reqwest = { version = "=0.12.4", features = ["json"] }
tonic = "=0.11.0"
tower = "=0.4.13"

# observability
console-subscriber = "=0.2.0"
metrics = { version = "=0.23.0", optional = true }
metrics-exporter-prometheus = { version = "=0.15.0", optional = true }
opentelemetry = "=0.23.0"
opentelemetry_sdk = { version = "=0.23.0", features = ["rt-tokio"] }
opentelemetry-otlp = { version = "=0.16.0", features = ["http-proto", "reqwest-client", "reqwest-rustls", "tls", "tls-roots"] }
sentry = "=0.34.0"
sentry-tracing = "=0.34.0"
tracing = { version = "=0.1.40", features = ["attributes"] }
tracing-opentelemetry = "=0.24.0"
tracing-subscriber = { version = "=0.3.18", features = ["env-filter", "json"] }

# storage
rocksdb = { version = "=0.22.0", features = ["multi-threaded-cf"], optional = true }
sqlx = { version = "=0.7.4", features = ["runtime-tokio", "postgres", "bigdecimal", "time"] }

# containers
testcontainers = "=0.15.0"
testcontainers-modules = { version = "=0.3.5", features = ["postgres"] }

# test
fake = { version = "=2.9.2", features = ["derive"] }

#relayer
petgraph = "=0.6.5"

# ------------------------------------------------------------------------------
# Platform specific dependencies
# ------------------------------------------------------------------------------

[target.'cfg(not(all(target_arch = "aarch64", target_os = "linux")))'.dependencies]
revm = { version = "=9.0.0", features = ["asm-keccak"]}

[target.'cfg(all(target_arch = "aarch64", target_os = "linux"))'.dependencies]
revm = { version = "=9.0.0" }

# ------------------------------------------------------------------------------
# Patches
# ------------------------------------------------------------------------------
[patch.crates-io]
console-subscriber = { git = "https://github.com/tokio-rs/console.git", rev = "852a977bab71d0f6ae47c6c5c1c20b8679c9e576" }


# ------------------------------------------------------------------------------
# Dev dependencies
# ------------------------------------------------------------------------------

[dev-dependencies]
binary_macros = "=1.0.0"
fancy-duration = "=0.9.2"
stringreader = "=0.1.1"
tempfile = "3.3.0"

# ------------------------------------------------------------------------------
# Build dependencies
# ------------------------------------------------------------------------------

[build-dependencies]
const-hex = "=1.12.0"
glob = "=0.3.1"
nom = "=7.1.3"
phf_codegen = "=0.11.2"
tonic-build = "=0.11.0"
vergen = { version = "=8.3.1", features = ["build", "cargo", "git", "gitcl", "rustc"] }

# ------------------------------------------------------------------------------
# Binaries
# ------------------------------------------------------------------------------

[[bin]]
name = "rpc-downloader"
path = "src/bin/rpc_downloader.rs"

[[bin]]
name = "importer-offline"
path = "src/bin/importer_offline.rs"

[[bin]]
name = "importer-online"
path = "src/bin/importer_online.rs"

[[bin]]
name = "state-validator"
path = "src/bin/state_validator.rs"

[[bin]]
name = "run-with-importer"
path = "src/bin/run_with_importer.rs"

[[bin]]
name = "relayer"
path = "src/bin/relayer.rs"

# ------------------------------------------------------------------------------
# Features
# ------------------------------------------------------------------------------

[features]
default = ["metrics", "tracing", "rocks"]

# Application is running in develoment mode.
dev  = []

# Enable runtime metrics collection.
metrics = ["dep:metrics", "dep:metrics-exporter-prometheus"]

# Enable runtime tracing/spans collection.
tracing = []

# Enable RocksDB dependencies.
rocks = ["rocksdb", "bincode"]

# Tools to comunicate with other pods
kubernetes = ["kube", "k8s-openapi"]

# XXX: Enable external transaction parallel execution.
executor-parallel = []

# ------------------------------------------------------------------------------
# Lints
# ------------------------------------------------------------------------------

[lints.clippy]
clone_on_ref_ptr = "warn"
disallowed_names = "warn"
manual_let_else = "warn"
semicolon_if_nothing_returned = "warn"
