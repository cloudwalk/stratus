{
  "db_name": "PostgreSQL",
  "query": "WITH block_insert AS (\n    INSERT INTO blocks (\n            number,\n            hash,\n            transactions_root,\n            gas_limit,\n            gas_used,\n            logs_bloom,\n            timestamp_in_secs,\n            parent_hash,\n            author,\n            extra_data,\n            miner,\n            difficulty,\n            receipts_root,\n            uncle_hash,\n            size,\n            state_root,\n            total_difficulty,\n            nonce,\n            created_at\n        )\n    VALUES (\n            $1,\n            $2,\n            $3,\n            $4,\n            $5,\n            $6,\n            $7,\n            $8,\n            $9,\n            $10,\n            $11,\n            $12,\n            $13,\n            $14,\n            $15,\n            $16,\n            $17,\n            $18,\n            current_timestamp\n        )\n    RETURNING 1 as res\n),\ntransaction_insert AS (\n    INSERT INTO transactions (\n            hash,\n            signer_address,\n            nonce,\n            address_from,\n            address_to,\n            input,\n            output,\n            gas,\n            gas_price,\n            idx_in_block,\n            block_number,\n            block_hash,\n            v,\n            r,\n            s,\n            value,\n            result,\n            chain_id\n        )\n    SELECT *\n    FROM unnest(\n            $19::bytea [],\n            $20::bytea [],\n            $21::numeric [],\n            $22::bytea [],\n            $23::bytea [],\n            $24::bytea [],\n            $25::bytea [],\n            $26::numeric [],\n            $27::numeric [],\n            $28::numeric [],\n            $29::numeric [],\n            $30::bytea [],\n            $31::bytea [],\n            $32::bytea [],\n            $33::bytea [],\n            $34::numeric [],\n            $35::text [],\n            $75::numeric [] -- TODO: refactor the ordering\n        )\n    RETURNING 1 as res\n),\nlog_insert AS (\n    INSERT INTO logs (\n            address,\n            data,\n            transaction_hash,\n            transaction_idx,\n            log_idx,\n            block_number,\n            block_hash\n        )\n    SELECT *\n    FROM unnest(\n            $36::bytea [],\n            $37::bytea [],\n            $38::bytea [],\n            $39::numeric [],\n            $40::numeric [],\n            $41::numeric [],\n            $42::bytea []\n        )\n    RETURNING 1 as res\n),\ntopic_insert AS (\n    INSERT INTO topics (\n            topic,\n            transaction_hash,\n            transaction_idx,\n            log_idx,\n            topic_idx,\n            block_number,\n            block_hash\n        )\n    SELECT *\n    FROM unnest(\n            $43::bytea [],\n            $44::bytea [],\n            $45::numeric [],\n            $46::numeric [],\n            $47::numeric [],\n            $48::numeric [],\n            $49::bytea []\n        )\n    RETURNING 1 as res\n),\naccount_insert AS (\n    WITH account_updates AS (\n        SELECT *\n        FROM unnest(\n                $50::bytea [],\n                $51::bytea [],\n                $52::numeric [],\n                $53::numeric [],\n                $54::numeric [],\n                $55::numeric [],\n                $56::numeric [],\n                $57::bytea [],\n                $58::JSONB [],\n                $59::JSONB []\n            ) AS t (\n                address,\n                bytecode,\n                new_balance,\n                new_nonce,\n                creation_block,\n                previous_balance,\n                previous_nonce,\n                code_hash,\n                static_slot_indexes,\n                mapping_slot_indexes\n            )\n    )\n    INSERT INTO accounts (\n            address,\n            bytecode,\n            latest_balance,\n            latest_nonce,\n            creation_block,\n            previous_balance,\n            previous_nonce,\n            code_hash,\n            static_slot_indexes,\n            mapping_slot_indexes\n        )\n    SELECT address,\n        bytecode,\n        new_balance,\n        new_nonce,\n        creation_block,\n        previous_balance,\n        previous_nonce,\n        code_hash,\n        static_slot_indexes,\n        mapping_slot_indexes\n    FROM account_updates ON CONFLICT (address) DO\n    UPDATE\n    SET latest_nonce = excluded.latest_nonce,\n        latest_balance = excluded.latest_balance,\n        previous_balance = excluded.previous_balance,\n        previous_nonce = excluded.previous_nonce\n    WHERE accounts.latest_nonce = excluded.previous_nonce\n        AND accounts.latest_balance = excluded.previous_balance\n    RETURNING 1 as res\n),\nslot_insert AS (\n    WITH slot_updates AS (\n        SELECT *\n        FROM unnest(\n                $60::bytea [],\n                $61::bytea [],\n                $62::bytea [],\n                $63::numeric [],\n                $64::bytea []\n            ) AS t (\n                idx,\n                value,\n                account_address,\n                creation_block,\n                original_value\n            )\n    )\n    INSERT INTO account_slots (\n            idx,\n            value,\n            previous_value,\n            account_address,\n            creation_block\n        )\n    SELECT idx,\n        value,\n        original_value,\n        account_address,\n        creation_block\n    FROM slot_updates ON CONFLICT (idx, account_address) DO\n    UPDATE\n    SET value = excluded.value,\n        previous_value = excluded.previous_value\n    WHERE account_slots.value = excluded.previous_value\n    RETURNING 1 as res\n),\nhistorical_nonce_insert AS (\n    INSERT INTO historical_nonces (address, nonce, block_number)\n    SELECT *\n    FROM unnest($65::bytea [], $66::numeric [], $67::numeric [])\n    RETURNING 1 as res\n),\nhistorical_balance_insert AS (\n    INSERT INTO historical_balances (address, balance, block_number)\n    SELECT *\n    FROM unnest($68::bytea [], $69::numeric [], $70::numeric [])\n    RETURNING 1 as res\n),\nhistorical_slots_insert AS (\n    INSERT INTO historical_slots (idx, value, account_address, block_number)\n    SELECT *\n    FROM unnest(\n            $71::bytea [],\n            $72::bytea [],\n            $73::bytea [],\n            $74::numeric []\n        )\n    RETURNING 1 as res\n)\nSELECT modified_accounts,\n    modified_slots\nFROM (\n        SELECT count(*) AS modified_accounts\n        FROM account_insert\n    ) as account_results\n    CROSS JOIN (\n        SELECT count(*) AS modified_slots\n        FROM slot_insert\n    ) as slot_results;\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "modified_accounts",
        "type_info": "Int8"
      },
      {
        "ordinal": 1,
        "name": "modified_slots",
        "type_info": "Int8"
      }
    ],
    "parameters": {
      "Left": [
        "Numeric",
        "Bytea",
        "Bytea",
        "Numeric",
        "Numeric",
        "Bytea",
        "Numeric",
        "Bytea",
        "Bytea",
        "Bytea",
        "Bytea",
        "Numeric",
        "Bytea",
        "Bytea",
        "Numeric",
        "Bytea",
        "Numeric",
        "Bytea",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "NumericArray",
        "NumericArray",
        "NumericArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "TextArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "NumericArray",
        "NumericArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "NumericArray",
        "NumericArray",
        "NumericArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "NumericArray",
        "NumericArray",
        "NumericArray",
        "NumericArray",
        "ByteaArray",
        "JsonbArray",
        "JsonbArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "NumericArray",
        "ByteaArray",
        "NumericArray",
        "NumericArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "NumericArray"
      ]
    },
    "nullable": [
      null,
      null
    ]
  },
  "hash": "0ec1b452d1fb4959d224e2dfc5f96391d4a77fbdeaabff2e7844e5beca02f54a"
}
