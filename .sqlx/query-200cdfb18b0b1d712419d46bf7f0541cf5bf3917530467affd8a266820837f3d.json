{
  "db_name": "PostgreSQL",
  "query": "WITH block_insert AS (\n    INSERT INTO blocks (\n        number,\n        hash,\n        transactions_root,\n        gas_limit,\n        gas_used,\n        logs_bloom,\n        timestamp_in_secs,\n        parent_hash,\n        author,\n        extra_data,\n        miner,\n        difficulty,\n        receipts_root,\n        uncle_hash,\n        size,\n        state_root,\n        total_difficulty,\n        nonce,\n        created_at\n    )\n    VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, current_timestamp)\n    RETURNING 1 as res\n),\n\ntransaction_insert AS (\n    INSERT INTO transactions (\n        hash,\n        signer_address,\n        nonce,\n        address_from,\n        address_to,\n        input,\n        output,\n        gas,\n        gas_price,\n        idx_in_block,\n        block_number,\n        block_hash,\n        v,\n        r,\n        s,\n        value,\n        result\n    )\n    SELECT *\n    FROM\n        unnest(\n            $19::bytea [],\n            $20::bytea [],\n            $21::numeric [],\n            $22::bytea [],\n            $23::bytea [],\n            $24::bytea [],\n            $25::bytea [],\n            $26::numeric [],\n            $27::numeric [],\n            $28::int4 [],\n            $29::int8 [],\n            $30::bytea [],\n            $31::bytea [],\n            $32::bytea [],\n            $33::bytea [],\n            $34::numeric [],\n            $35::text []\n        )\n    RETURNING 1 as res\n),\n\nlog_insert AS (\n    INSERT INTO logs (\n        address,\n        data,\n        transaction_hash,\n        transaction_idx,\n        log_idx,\n        block_number,\n        block_hash\n    )\n    SELECT *\n    FROM\n        unnest(\n            $36::bytea [],\n            $37::bytea [],\n            $38::bytea [],\n            $39::int4 [],\n            $40::int4 [],\n            $41::int8 [],\n            $42::bytea []\n        )\n    RETURNING 1 as res\n),\n\ntopic_insert AS (\n    INSERT INTO topics (\n        topic,\n        transaction_hash,\n        transaction_idx,\n        log_idx,\n        topic_idx,\n        block_number,\n        block_hash\n    )\n    SELECT *\n    FROM\n        unnest(\n            $43::bytea [],\n            $44::bytea [],\n            $45::int4 [],\n            $46::int4 [],\n            $47::int4 [],\n            $48::int8 [],\n            $49::bytea []\n        )\n    RETURNING 1 as res\n),\n\naccount_insert AS (\n    WITH account_updates AS (\n        SELECT *\n        FROM\n            unnest(\n                $50::bytea [],\n                $51::bytea [],\n                $52::numeric [],\n                $53::numeric [],\n                $54::int8 [],\n                $55::numeric [],\n                $56::numeric []\n            )\n            AS t (\n                address,\n                bytecode,\n                new_balance,\n                new_nonce,\n                creation_block,\n                original_balance,\n                original_nonce\n            )\n    )\n\n    INSERT INTO accounts (\n        address, bytecode, latest_balance, latest_nonce, creation_block\n    )\n    SELECT\n        address,\n        bytecode,\n        new_balance,\n        new_nonce,\n        creation_block\n    FROM account_updates\n    ON CONFLICT (address) DO\n    UPDATE\n    SET latest_nonce = excluded.latest_nonce,\n    latest_balance = excluded.latest_balance\n    WHERE accounts.latest_nonce\n    = (\n        SELECT original_nonce\n        FROM account_updates\n        WHERE account_updates.address = excluded.address\n    )\n    AND accounts.latest_balance\n    = (\n        SELECT original_balance\n        FROM account_updates\n        WHERE account_updates.address = excluded.address\n    )\n    RETURNING 1 as res\n),\n\nslot_insert AS (\n    WITH slot_updates AS (\n        SELECT *\n        FROM\n            unnest(\n                $57::bytea [],\n                $58::bytea [],\n                $59::bytea [],\n                $60::int8 [],\n                $61::bytea []\n            )\n            AS t (idx, value, account_address, creation_block, original_value)\n    )\n\n    INSERT INTO account_slots (idx, value, account_address, creation_block)\n    SELECT\n        idx,\n        value,\n        account_address,\n        creation_block\n    FROM slot_updates\n    ON CONFLICT (idx, account_address) DO\n    UPDATE\n    SET value = excluded.value\n    WHERE account_slots.value = (\n        SELECT original_value\n        FROM slot_updates\n        WHERE\n            slot_updates.idx = excluded.idx\n            AND slot_updates.account_address = excluded.account_address\n    )\n    RETURNING 1 as res\n),\n\nhistorical_nonce_insert AS (\n    INSERT INTO historical_nonces (address, nonce, block_number)\n    SELECT * FROM unnest($62::bytea [], $63::numeric [], $64::int8 [])\n    RETURNING 1 as res\n),\n\nhistorical_balance_insert AS (\n    INSERT INTO historical_balances (address, balance, block_number)\n    SELECT * FROM unnest($65::bytea [], $66::numeric [], $67::int8 [])\n    RETURNING 1 as res\n),\n\nhistorical_slots_insert AS (\n    INSERT INTO historical_slots (idx, value, account_address, block_number)\n    SELECT *\n    FROM unnest($68::bytea [], $69::bytea [], $70::bytea [], $71::int8 [])\n    RETURNING 1 as res\n)\n\nSELECT modified_accounts, modified_slots FROM\n(SELECT count(*) AS modified_accounts FROM account_insert)\nCROSS JOIN\n(SELECT count(*) AS modified_slots FROM slot_insert);\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "modified_accounts",
        "type_info": "Int8"
      },
      {
        "ordinal": 1,
        "name": "modified_slots",
        "type_info": "Int8"
      }
    ],
    "parameters": {
      "Left": [
        "Int8",
        "Bytea",
        "Bytea",
        "Numeric",
        "Numeric",
        "Bytea",
        "Int8",
        "Bytea",
        "Bytea",
        "Bytea",
        "Bytea",
        "Numeric",
        "Bytea",
        "Bytea",
        "Numeric",
        "Bytea",
        "Numeric",
        "Numeric",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "NumericArray",
        "Int4Array",
        "Int8Array",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "TextArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "Int4Array",
        "Int4Array",
        "Int8Array",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "Int4Array",
        "Int4Array",
        "Int4Array",
        "Int8Array",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "NumericArray",
        "Int8Array",
        "NumericArray",
        "NumericArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "Int8Array",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "Int8Array",
        "ByteaArray",
        "NumericArray",
        "Int8Array",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "Int8Array"
      ]
    },
    "nullable": [
      null,
      null
    ]
  },
  "hash": "200cdfb18b0b1d712419d46bf7f0541cf5bf3917530467affd8a266820837f3d"
}
