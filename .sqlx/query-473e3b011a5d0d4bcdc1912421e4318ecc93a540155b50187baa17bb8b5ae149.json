{
  "db_name": "PostgreSQL",
  "query": "WITH block_insert AS (\n    INSERT INTO blocks (\n        number,\n        hash,\n        transactions_root,\n        gas,\n        logs_bloom,\n        timestamp_in_secs,\n        parent_hash,\n        created_at\n    )\n    VALUES ($1, $2, $3, $4, $5, $6, $7, current_timestamp)\n    RETURNING 1 as res\n),\n\ntransaction_insert AS (\n    INSERT INTO transactions (\n        hash,\n        signer_address,\n        nonce,\n        address_from,\n        address_to,\n        input,\n        output,\n        gas,\n        gas_price,\n        idx_in_block,\n        block_number,\n        block_hash,\n        v,\n        r,\n        s,\n        value,\n        result\n    )\n    SELECT *\n    FROM\n        unnest(\n            $8::bytea [],\n            $9::bytea [],\n            $10::numeric [],\n            $11::bytea [],\n            $12::bytea [],\n            $13::bytea [],\n            $14::bytea [],\n            $15::numeric [],\n            $16::numeric [],\n            $17::int4 [],\n            $18::int8 [],\n            $19::bytea [],\n            $20::bytea [],\n            $21::bytea [],\n            $22::bytea [],\n            $23::numeric [],\n            $24::text []\n        )\n    RETURNING 1 as res\n),\n\nlog_insert AS (\n    INSERT INTO logs (\n        address,\n        data,\n        transaction_hash,\n        transaction_idx,\n        log_idx,\n        block_number,\n        block_hash\n    )\n    SELECT *\n    FROM\n        unnest(\n            $25::bytea [],\n            $26::bytea [],\n            $27::bytea [],\n            $28::int4 [],\n            $29::int4 [],\n            $30::int8 [],\n            $31::bytea []\n        )\n    RETURNING 1 as res\n),\n\ntopic_insert AS (\n    INSERT INTO topics (\n        topic,\n        transaction_hash,\n        transaction_idx,\n        log_idx,\n        topic_idx,\n        block_number,\n        block_hash\n    )\n    SELECT *\n    FROM\n        unnest(\n            $32::bytea [],\n            $33::bytea [],\n            $34::int4 [],\n            $35::int4 [],\n            $36::int4 [],\n            $37::int8 [],\n            $38::bytea []\n        )\n    RETURNING 1 as res\n),\n\naccount_insert AS (\n    WITH account_updates AS (\n        SELECT *\n        FROM\n            unnest(\n                $39::bytea [],\n                $40::bytea [],\n                $41::numeric [],\n                $42::numeric [],\n                $43::int8 [],\n                $44::numeric [],\n                $45::numeric []\n            )\n            AS t (\n                address,\n                bytecode,\n                new_balance,\n                new_nonce,\n                creation_block,\n                original_balance,\n                original_nonce\n            )\n    )\n\n    INSERT INTO accounts (\n        address, bytecode, latest_balance, latest_nonce, creation_block\n    )\n    SELECT\n        address,\n        bytecode,\n        new_balance,\n        new_nonce,\n        creation_block\n    FROM account_updates\n    ON CONFLICT (address) DO\n    UPDATE\n    SET latest_nonce = excluded.latest_nonce,\n    latest_balance = excluded.latest_balance\n    WHERE accounts.latest_nonce\n    = (\n        SELECT original_nonce\n        FROM account_updates\n        WHERE account_updates.address = excluded.address\n    )\n    AND accounts.latest_balance\n    = (\n        SELECT original_balance\n        FROM account_updates\n        WHERE account_updates.address = excluded.address\n    )\n    RETURNING 1 as res\n),\n\nslot_insert AS (\n    WITH slot_updates AS (\n        SELECT *\n        FROM\n            unnest(\n                $46::bytea [],\n                $47::bytea [],\n                $48::bytea [],\n                $49::int8 [],\n                $50::bytea []\n            )\n            AS t (idx, value, account_address, creation_block, original_value)\n    )\n\n    INSERT INTO account_slots (idx, value, account_address, creation_block)\n    SELECT\n        idx,\n        value,\n        account_address,\n        creation_block\n    FROM slot_updates\n    ON CONFLICT (idx, account_address) DO\n    UPDATE\n    SET value = excluded.value\n    WHERE account_slots.value = (\n        SELECT original_value\n        FROM slot_updates\n        WHERE\n            slot_updates.idx = excluded.idx\n            AND slot_updates.account_address = excluded.account_address\n    )\n    RETURNING 1 as res\n),\n\nhistorical_nonce_insert AS (\n    INSERT INTO historical_nonces (address, nonce, block_number)\n    SELECT * FROM unnest($51::bytea [], $52::numeric [], $53::int8 [])\n    RETURNING 1 as res\n),\n\nhistorical_balance_insert AS (\n    INSERT INTO historical_balances (address, balance, block_number)\n    SELECT * FROM unnest($54::bytea [], $55::numeric [], $56::int8 [])\n    RETURNING 1 as res\n),\n\nhistorical_slots_insert AS (\n    INSERT INTO historical_slots (idx, value, account_address, block_number)\n    SELECT *\n    FROM unnest($57::bytea [], $58::bytea [], $59::bytea [], $60::int8 [])\n    RETURNING 1 as res\n)\n\nSELECT Sum(count) as affected_rows FROM\n    ((SELECT count(*) AS count FROM block_insert)\n        UNION ALL\n        SELECT count(*) AS count FROM transaction_insert\n        UNION ALL\n        SELECT count(*) AS count FROM log_insert\n        UNION ALL\n        SELECT count(*) AS count FROM topic_insert\n        UNION ALL\n        SELECT count(*) AS count FROM account_insert\n        UNION ALL\n        SELECT count(*) AS count FROM slot_insert\n        UNION ALL\n        SELECT count(*) AS count FROM historical_balance_insert\n        UNION ALL\n        SELECT count(*) AS count FROM historical_nonce_insert\n        UNION ALL\n        SELECT count(*) AS count FROM historical_slots_insert);\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "affected_rows",
        "type_info": "Numeric"
      }
    ],
    "parameters": {
      "Left": [
        "Int8",
        "Bytea",
        "Bytea",
        "Numeric",
        "Bytea",
        "Int8",
        "Bytea",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "NumericArray",
        "Int4Array",
        "Int8Array",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "TextArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "Int4Array",
        "Int4Array",
        "Int8Array",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "Int4Array",
        "Int4Array",
        "Int4Array",
        "Int8Array",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "NumericArray",
        "Int8Array",
        "NumericArray",
        "NumericArray",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "Int8Array",
        "ByteaArray",
        "ByteaArray",
        "NumericArray",
        "Int8Array",
        "ByteaArray",
        "NumericArray",
        "Int8Array",
        "ByteaArray",
        "ByteaArray",
        "ByteaArray",
        "Int8Array"
      ]
    },
    "nullable": [
      null
    ]
  },
  "hash": "473e3b011a5d0d4bcdc1912421e4318ecc93a540155b50187baa17bb8b5ae149"
}
