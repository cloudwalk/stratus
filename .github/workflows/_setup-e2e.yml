name: Setup E2E Environment

on:
  workflow_call:
    inputs:
      justfile_recipe:
        required: true
        type: string
      justfile_env:
        required: false
        type: string
        default: ''
      cache_key:
        required: false
        type: string
        default: 'stable-release'

jobs:
  setup_and_test:
    name: Setup and Run E2E
    runs-on: ubuntu-latest
    timeout-minutes: 35
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Cargo Registry and Target Directory
        uses: actions/cache@v4.0.2
        id: cache-cargo
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-v2-cargo-${{ inputs.cache_key }}-${{ hashFiles('Cargo.lock', 'Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-v2-cargo-${{ inputs.cache_key }}-
            ${{ runner.os }}-v2-cargo-stable-release-

      - name: Set up Rust
        if: ${{ steps.cache-cargo.outputs.cache-hit != 'true' }}
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - name: Set up Just
        uses: extractions/setup-just@v1

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Set up Test Dependencies
        if: ${{ steps.cache-cargo.outputs.cache-hit != 'true' }}
        run: |
          cargo install killport || true
          cargo install wait-service || true

      - name: Run e2e tests
        run: ${{ inputs.justfile_env }} just ${{ inputs.justfile_recipe }}
        env:
          CARGO_PROFILE_RELEASE_DEBUG: 0
          RUST_LOG: off
          RELEASE: 1
