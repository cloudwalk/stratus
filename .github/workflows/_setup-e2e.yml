name: Setup E2E Environment

on:
  workflow_call:
    inputs:
      justfile_recipe:
        required: true
        type: string
      justfile_args:
        required: false
        type: string
        default: ""
      justfile_env:
        required: false
        type: string
        default: ""
      cache_key:
        required: false
        type: string
        default: "stable-release"
    secrets:
      CODECOV_TOKEN:
        required: true

jobs:
  setup_and_test:
    name: Setup and Run E2E
    runs-on: ubuntu-22.04
    timeout-minutes: 35
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.84

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        id: cache-cargo
        with:
          prefix-key: ${{ runner.os }}-v3-cargo
          shared-key: ${{ inputs.cache_key }}
          key: ${{ hashFiles('Cargo.lock', 'Cargo.toml') }}
          cache-provider: "github"
          cache-directories: "~/.cargo/bin/"

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - name: Install libsasl2-dev libssl-dev
        run: sudo apt-get update && sudo apt install -y build-essential pkg-config libssl-dev libsasl2-dev

      - name: Set up Just
        uses: extractions/setup-just@v2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions

      - name: Install docker-compose
        run: sudo apt-get install docker-compose -y

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Install docker docker-compose
        run: sudo apt-get install docker-compose -y

      - name: Set up Test Dependencies
        if: ${{ steps.cache-cargo.outputs.cache-hit != 'true' }}
        run: |
          cargo install killport || true
          cargo install wait-service || true

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov@0.6.14

      - name: Run e2e tests
        run: ${{ inputs.justfile_env }} just run-test ${{ inputs.justfile_recipe }} ${{ inputs.jusftile_args }}
        env:
          CARGO_PROFILE_RELEASE_DEBUG: 0
          RUST_LOG: error
          RELEASE: 0
          RUST_BACKTRACE: 1

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: target/llvm-cov/codecov/${{ inputs.justfile_recipe }}.info
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ inputs.justfile_recipe }}
          name: ${{ inputs.justfile_recipe }}
