name: Rust tests

on:
  pull_request:
    branches:
      - "*"
    paths-ignore:
      - ".github/workflows/deploy.yml"
      - ".github/workflows/docs-release.yml"
      - ".github/workflows/outdated.yml"
      - ".github/workflows/comment-tag-report.yml"
      - ".github/workflows/pr-agent.yml"
      - ".github/workflows/build-binary.yml"
      - ".github/CODEOWNERS"
      - "config/**"
      - "README.md"
      - "LICENSE"
      - "CONTRIBUTING.md"
      - "utils/slack-notifiers/**"
  workflow_dispatch:
  push: # Rebuild cache policy
    branches:
      - "main"
    paths:
      - "Cargo.lock"
      - "Cargo.toml"

jobs:
  unit_tests:
    name: Rust Tests
    runs-on: ubuntu-22.04
    timeout-minutes: 25

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.84

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        id: cache-cargo
        with:
          prefix-key: ${{ runner.os }}-v3-cargo
          shared-key: test
          key: ${{ hashFiles('Cargo.lock', 'Cargo.toml') }}
          cache-provider: "github"
          cache-directories: "~/.cargo/bin/"

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - name: Install libsasl2-dev libssl-dev
        run: sudo apt-get update && sudo apt install -y build-essential pkg-config libssl-dev libsasl2-dev

      - name: Set up Just
        uses: extractions/setup-just@v2

      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov@0.6.14

      - name: Rust tests
        run: just test

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          directory: target/llvm-cov/codecov/
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: rust-tests
          name: rust-tests
