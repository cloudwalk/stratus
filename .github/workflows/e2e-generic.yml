name: E2E Generic

on:
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - '.github/workflows/deploy.yml'
      - '.github/workflows/docs-release.yml'
      - '.github/workflows/outdated.yml'
      - '.github/workflows/comment-tag-report.yml'
      - '.github/workflows/pr-agent.yml'
      - '.github/workflows/build-binary.yml'
      - '.github/CODEOWNERS'
      - 'config/**'
      - 'README.md'
      - 'LICENSE'
      - 'CONTRIBUTING.md'
      - 'utils/slack-notifiers/**'
  workflow_dispatch:

jobs:
  e2e_generic:
    strategy:
      fail-fast: false
      matrix:
        include:
          # - leader-restart: true
          #   instances: 2
          #   iterations: 1
          # - leader-restart: true
          #   instances: 3
          #   iterations: 1
          # - leader-restart: false
          #   instances: 2
          #   iterations: 1
          # - leader-restart: false
          #   instances: 3
          #   iterations: 1
          - leader-restart: true
            instances: 1
            iterations: 2

    name: E2E Generic with (${{ matrix.instances }}, ${{ matrix.leader-restart }})
    runs-on: ubuntu-latest
    timeout-minutes: 45

    concurrency:
      group: ${{ github.workflow }}-${{ matrix.leader-restart }}-${{ matrix.instances }}-${{ matrix.iterations }}-${{ github.ref || github.run_id }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.79

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        id: cache-cargo
        with:
          prefix-key: ${{ runner.os }}-v3-cargo
          shared-key: stable-release
          key: ${{ hashFiles('Cargo.lock', 'Cargo.toml') }}
          cache-provider: "github"
          cache-directories: "~/.cargo/bin/"

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Set up Just
        uses: extractions/setup-just@v2

      - name: Set up dependencies
        if: ${{ steps.cache-cargo.outputs.cache-hit != 'true' }}
        run: |
          cargo install killport || true
          cargo install wait-service || true

      - name: Clone all contracts
        run: just contracts-clone --token

      - name: Flatten all contracts
        run: just contracts-flatten --token

      - name: Run e2e tests
        run: just run-chaos-experiment stratus ${{ matrix.instances }} ${{ matrix.iterations }} ${{ matrix.leader-restart }} main
        env:
          CARGO_PROFILE_RELEASE_DEBUG: 0
          RUST_LOG: warn
          RELEASE: 1
