name: Build Binary

on:
  workflow_dispatch:
    inputs:
      features:
        description: "List of features to enable"
        required: false
        default: ""
  push:
    branches:
      - "main"
    paths:
      - "src/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - "rust-toolchain.toml"
      - "tests/fixtures/**"
      - "static/**"
      - ".sqlx/**"

env:
  RETENTION_DAYS: 90

jobs:
  build_binaries:
    name: Build and upload
    runs-on: ubuntu-latest
    timeout-minutes: 45

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

    concurrency:
      group: ${{ github.workflow }}-${{ matrix.target }}-{{ github.run_id }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.81

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        id: cache-cargo
        with:
          prefix-key: ${{ runner.os }}-v3-cargo
          shared-key: artifact
          cache-provider: "github"
          save-if: ${{ github.ref_name == 'main' && github.event_name == 'push' }}

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            libssl-dev \
            clang \
            libclang-dev \
            llvm-dev \
            pkg-config

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Build binaries
        run: |
          cargo build --release \
            --bin stratus \
            --target ${{ matrix.target }} \
            --features "$FEATURES"
        env:
          CARGO_PROFILE_RELEASE_DEBUG: 1
          TRACING_LOG_FORMAT: json
          NO_COLOR: 1
          FEATURES: "${{ github.event.inputs.features || 'default' }}"
          RUSTFLAGS: ${{ matrix.target == 'aarch64-unknown-linux-gnu' && '-C linker=aarch64-linux-gnu-gcc' || '' }}

      - name: Upload stratus
        uses: actions/upload-artifact@v4
        id: upload-str
        with:
          name: ${{ matrix.target == 'x86_64-unknown-linux-gnu' && 'stratus' || format('stratus-{0}', matrix.target) }}-${{ github.sha }}
          path: target/${{ matrix.target }}/release/stratus
          if-no-files-found: error
          retention-days: ${{ env.RETENTION_DAYS }}

      - name: Print outputs
        run: |
          echo "Artifact ID: ${{ steps.upload-str.outputs.artifact-id }} (stratus)"
          echo "Artifact URL: ${{ steps.upload-str.outputs.artifact-url }} (stratus)"