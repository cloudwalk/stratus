name: E2E Leader & Follower

permissions:
  contents: read

on:
  pull_request:
    branches:
      - "*"
    paths-ignore:
      - ".github/workflows/deploy.yml"
      - ".github/workflows/docs-release.yml"
      - ".github/workflows/outdated.yml"
      - ".github/workflows/comment-tag-report.yml"
      - ".github/workflows/pr-agent.yml"
      - ".github/workflows/build-binary.yml"
      - ".github/CODEOWNERS"
      - "config/**"
      - "README.md"
      - "LICENSE"
      - "CONTRIBUTING.md"
      - "utils/slack-notifiers/**"

  push: # Rebuild cache policy
    branches:
      - "main"
    paths:
      - "Cargo.lock"
      - "Cargo.toml"
      - "rust-toolchain.toml"

  workflow_dispatch:

env:
  CACHE_SHARED_KEY: stable-release
  CACHE_KEY_CONTEXT: v1-cargo-leader-follower-tests
  CACHE_PATH: |
    ~/.cargo/registry/index/
    ~/.cargo/registry/cache/
    ~/.cargo/git/db/
    ~/.cargo/bin
    target/
  CACHE_KEY: ${ CACHE_KEY_CONTEXT }


jobs:
  setup_cache:
    name: Setup Cache for E2E Leader & Follower tests
    runs-on: ubuntu-22.04
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Calculate and set cache key
        id: cache-key
        run: |
          CACHE_KEY="${{ runner.os }}-${{ env.CACHE_KEY_CONTEXT }}-${{ hashFiles('**/Cargo.lock') }}"
          echo "CACHE_KEY=$CACHE_KEY" >> $GITHUB_ENV
          echo "key=$CACHE_KEY" >> $GITHUB_OUTPUT

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88      

      - name: Rust Cache - Restore workflow cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ env.CACHE_KEY }}
          restore-keys: ${{ env.CACHE_SHARED_KEY }}

      - name: Install libsasl2-dev libssl-dev
        run: sudo apt-get update && sudo apt install -y build-essential pkg-config libssl-dev libsasl2-dev

      - name: Install cargo tools
        run: cargo install killport@1.1.0 wait-service@0.3.1 || true

      - name: Set up dependencies
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov@0.6.14

      - name: Build all dependencies to prime the cache
        shell: bash
        run: |
          source <(cargo llvm-cov show-env --export-prefix)
          echo "RUSTFLAGS=${RUSTFLAGS}"
          cargo build --features dev
      
      - name: Rust Cache - Save workflow cache
        uses: actions/cache/save@v4
        with:
          key: ${{ env.CACHE_KEY }}
          path: ${{ env.CACHE_PATH }}

  leader_follower_test:
    strategy:
      fail-fast: false
      matrix:
        test:
          [brlc, importer, miner, change, deploy, kafka, health]
        use_block_changes_replication: [false, true]
    name: "E2E Leader & Follower on ${{ matrix.test }} (Replication: ${{ matrix.use_block_changes_replication }})"
    needs: setup_cache
    runs-on: ubuntu-22.04
    timeout-minutes: 45

    concurrency:
      group: ${{ github.workflow }}-${{ matrix.test }}-${{ matrix.use_block_changes_replication }}-${{ github.ref || github.run_id }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88

      - name: Rust Restore Cache
        id: cache-cargo
        uses: actions/cache/restore@v4
        with:
          key: ${{ needs.setup_cache.outputs.cache-key }}
          restore-keys: ${{ env.CACHE_SHARED_KEY }}
          path: ${{ env.CACHE_PATH }}
  
      - name: Install libsasl2-dev libssl-dev
        run: sudo apt-get update && sudo apt install -y build-essential pkg-config libssl-dev libsasl2-dev

      - name: Set up Just
        uses: extractions/setup-just@v2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions

      - name: Install npm
        run: npm install -g npm@10.8.2

      - name: Install cargo tools
        run: cargo install killport@1.1.0 wait-service@0.3.1 || true

      - name: Set up dependencies
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov@0.6.14

      - name: Install Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Install Docker Compose
        if: matrix.test == 'kafka'
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Clone BRLCToken repository
        run: just contracts-clone --token

      - name: Flatten BRLCToken contract
        run: just contracts-flatten --token

      - name: Run e2e tests
        run: just run-test e2e-leader-follower-up ${{ matrix.test }} ${{ matrix.use_block_changes_replication }}
        env:
          CARGO_PROFILE_RELEASE_DEBUG: 0
          RUST_LOG: error
          RELEASE: 1
          RUST_BACKTRACE: 1

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: target/llvm-cov/codecov/e2e-leader-follower-up.info
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: leader-follower-${{ matrix.group }}
          name: leader-follower-${{ matrix.group }}
